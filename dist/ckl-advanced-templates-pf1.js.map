{"version":3,"file":"ckl-advanced-templates-pf1.js","sources":["../src/module/consts.js","../src/module/settings.js","../src/module/scripts/utils/if-debug.js","../src/module/scripts/utils/get-token-from-item.js","../src/module/scripts/utils/localize.js","../src/module/scripts/template-placement/index.js","../src/module/scripts/template-placement/circle-placement.js","../src/module/scripts/template-placement/cone-placement.js","../src/module/scripts/template-selector-injector/template.js","../src/module/scripts/template-selector-injector/index.js","../src/module/scripts/measured-template-pf-advanced.js","../src/module/scripts/duration-tracker.js","../src/module/scripts/sync-templates-to-token.js","../src/module/ckl-advanced-templates-pf1.js"],"sourcesContent":["export const MODULE_NAME = 'ckl-advanced-templates-pf1';\n\nexport const CONSTS = {\n    placement: {\n        circle: {\n            grid: 'grid',\n            self: 'self',\n            splash: 'splash',\n        },\n        cone: {\n            selectTargetSquare: 'selectTargetSquare',\n            self: 'self',\n        },\n        useSystem: 'useSystem',\n    },\n    flags: {\n        placementType: 'placementType',\n        circle: {\n            areaType: 'areaType',\n            movesWithToken: 'movesWithToken',\n        },\n        cone: {\n        },\n        exireAtTurnEnd: 'exireAtTurnEnd',\n        ignoreRange: 'ignoreRange',\n        hideHighlight: 'hideHighlight',\n    },\n    areaType: {\n        burst: 'burst',\n        emanation: 'emanation',\n        spread: 'spread',\n    },\n};\n\n","import { MODULE_NAME } from \"./consts\";\r\n\r\nconst settings = {\r\n    client: {\r\n        debug: {\r\n            key: 'debug',\r\n            name: `${MODULE_NAME}.settings.debug.name`,\r\n            hint: `${MODULE_NAME}.settings.debug.hint`,\r\n            type: Boolean,\r\n            config: true,\r\n            default: false,\r\n        },\r\n        target: {\r\n            key: 'target',\r\n            name: `${MODULE_NAME}.settings.target.name`,\r\n            hint: `${MODULE_NAME}.settings.target.hint`,\r\n            type: Boolean,\r\n            config: true,\r\n            default: true,\r\n        },\r\n        reExpand: {\r\n            key: 'reExpand',\r\n            name: `${MODULE_NAME}.settings.reExpand.name`,\r\n            hint: `${MODULE_NAME}.settings.reExpand.hint`,\r\n            type: Boolean,\r\n            config: true,\r\n            default: false,\r\n        },\r\n    },\r\n    world: {\r\n        cone15Alternate: {\r\n            key: 'cone15Alternate',\r\n            name: `${MODULE_NAME}.settings.cone15Alternate.name`,\r\n            hint: `${MODULE_NAME}.settings.cone15Alternate.hint`,\r\n            type: Boolean,\r\n            config: false,\r\n            default: false,\r\n        },\r\n        coneRotation: {\r\n            key: 'coneRotation',\r\n            name: `${MODULE_NAME}.settings.coneRotation.name`,\r\n            hint: `${MODULE_NAME}.settings.coneRotation.hint`,\r\n            type: Boolean,\r\n            config: false,\r\n            default: false,\r\n        },\r\n        useSystem: {\r\n            key: 'useSystem',\r\n            name: `${MODULE_NAME}.settings.useSystem.name`,\r\n            hint: `${MODULE_NAME}.settings.useSystem.hint`,\r\n            type: Boolean,\r\n            config: false,\r\n            default: false,\r\n        },\r\n    },\r\n};\r\n\r\nconst initSetting = (scope) =>\r\n    Object.keys(settings[scope])\r\n        .map((key) => settings[scope][key])\r\n        .forEach((setting) =>\r\n            game.settings.register(MODULE_NAME, setting.key, {\r\n                ...setting,\r\n                scope,\r\n            })\r\n        );\r\n\r\n/**\r\n * Setup module-specific settings\r\n */\r\nexport function registerSettings() {\r\n    initSetting('client');\r\n    initSetting('world');\r\n}\r\n\r\nexport class Settings {\r\n    static get cone15Alternate() {\r\n        return Settings.#getSetting('cone15Alternate');\r\n    }\r\n\r\n    static get coneRotation() {\r\n        return Settings.#getSetting('coneRotation');\r\n    }\r\n\r\n    static get debug() {\r\n        return Settings.#getSetting('debug');\r\n    }\r\n\r\n    static get reExpand() {\r\n        return Settings.#getSetting('reExpand');\r\n    }\r\n\r\n    static get target() {\r\n        return Settings.#getSetting('target');\r\n    }\r\n\r\n    static get useSystem() {\r\n        return Settings.#getSetting('useSystem');\r\n    }\r\n\r\n    static #getSetting(key) {\r\n        return game.settings.get(MODULE_NAME, key);\r\n    }\r\n}\r\n","import { MODULE_NAME } from \"../../consts\";\r\n\r\nconst self = (me) => typeof me === 'function' ? me() : me;\r\n\r\nexport default (func) => {\r\n    if (game.settings.get(MODULE_NAME, 'debug')) {\r\n        return self(func);\r\n    }\r\n};\r\n","const getToken = (itemPf) => itemPf?.parent?.getActiveTokens()?.[0] || undefined;\r\n\r\nexport default getToken;\r\n","import { MODULE_NAME } from \"../../consts\";\r\n\r\nconst localize = (key) => game.i18n.localize(`${MODULE_NAME}.${key}`);\r\nconst localizeF = (key, opts) => game.i18n.format(`${MODULE_NAME}.${key}`, opts);\r\n\r\nexport {\r\n    localize,\r\n    localizeF,\r\n};\r\n","import ifDebug from '../utils/if-debug';\r\nimport { CONSTS, MODULE_NAME } from '../../consts';\r\nimport { getToken } from '../utils';\r\nimport { Settings } from '../../settings';\r\n\r\n/**\r\n * Common logic and switch statement for placing all templates\r\n *\r\n * @param {Function} wrapped The base `promptMeasureTemplate`\r\n *\r\n * @param {object} shared The shared context passed between different functions when executing an Attack\r\n *\r\n * @returns {object} The template creation data\r\n */\r\nasync function promptMeasureTemplate(wrapped, shared) {\r\n    ifDebug(() => console.log('promptMeasureTemplate', this, shared));\r\n\r\n    // return success early if user isn't allowed to place templates\r\n    if (!hasTemplatePermission()) {\r\n        return {\r\n            delete: () => { },\r\n            place: () => { },\r\n            result: true,\r\n        };\r\n    }\r\n\r\n    if (this.getFlag(MODULE_NAME, CONSTS.flags.placementType) === CONSTS.placement.useSystem) {\r\n        return wrapped(shared);\r\n    }\r\n\r\n    const windows = Object.values(ui.windows).filter((x) => !!x.minimize && !x._minimized);\r\n    await Promise.all(windows.map((x) => x.minimize()));\r\n\r\n    const type = this.data.data.measureTemplate.type;\r\n    const token = getToken(this) || {};\r\n    const icon = this.data.img === 'systems/pf1/icons/misc/magic-swirl.png' ? undefined : this.data.img;\r\n    const { minRange, maxRange } = this;\r\n\r\n    const templateData = {\r\n        _id: randomID(16),\r\n        distance: _getSize(this, shared) || 5,\r\n        t: type,\r\n        flags: {\r\n            [MODULE_NAME]: {\r\n                ...this.data.flags[MODULE_NAME],\r\n                icon,\r\n                maxRange,\r\n                minRange,\r\n                tokenId: token?.id,\r\n            },\r\n        },\r\n        user: game.userId,\r\n        fillColor: this.data.data.measureTemplate?.overrideColor\r\n            ? this.data.data.measureTemplate.customColor\r\n            : game.user.color,\r\n        texture: this.data.data.measureTemplate?.overrideTexture\r\n            ? this.data.data.measureTemplate.customTexture\r\n            : null,\r\n    };\r\n\r\n    const template = await game[MODULE_NAME].AbilityTemplateAdvanced.fromData(templateData, this);\r\n    if (!template) {\r\n        return { result: false };\r\n    }\r\n\r\n    const result = await template.drawPreview();\r\n\r\n    if (!result.result) {\r\n        await Promise.all(windows.map((x) => x.maximize()));\r\n        return result;\r\n    }\r\n\r\n    if (Settings.reExpand) {\r\n        await Promise.all(windows.map((x) => x.maximize()));\r\n    }\r\n\r\n    shared.template = await result.place();\r\n\r\n    return result;\r\n}\r\n\r\nexport default promptMeasureTemplate;\r\n\r\nconst _getSize = (itemPf, shared) => typeof itemPf.data.data.measureTemplate.size === 'string'\r\n    ? RollPF.safeTotal(itemPf.data.data.measureTemplate.size, shared.rollData)\r\n    : game.pf1.utils.convertDistance(itemPf.data.data.measureTemplate.size)[0];\r\n\r\nconst hasTemplatePermission = () => game.permissions.TEMPLATE_CREATE.includes(game.user.role);\r\n","import { CONSTS, MODULE_NAME } from '../../consts';\nimport { ifDebug, localize, localizeF } from '../utils';\n\nexport class CirclePlacement {\n    // emanation or burst \"centered on you\" spreads from edge - not center\n\n    constructor(itemPf) {\n        this.itemPf = itemPf;\n    }\n\n    _placementTypes = {\n        [CONSTS.placement.circle.grid]: {\n            key: CONSTS.placement.circle.grid,\n            label: localize('templates.circle.placement.grid.label'),\n        },\n        [CONSTS.placement.circle.self]: {\n            key: CONSTS.placement.circle.self,\n            label: localize('templates.circle.placement.self.label'),\n        },\n        [CONSTS.placement.circle.splash]: {\n            key: CONSTS.placement.circle.splash,\n            label: localize('templates.circle.placement.splash.label'),\n        },\n        [CONSTS.placement.useSystem]: {\n            key: CONSTS.placement.useSystem,\n            label: localize('templates.placement.useSystem.label'),\n        },\n    };\n\n    async showPlacementMenu() {\n        const areaType = this._getAreaType();\n        const currentPlacementType = this._getPlacementType();\n        const movesWithToken = this.itemPf.getFlag(MODULE_NAME, CONSTS.flags.circle.movesWithToken);\n        const deleteAtTurnEnd = this.itemPf.getFlag(MODULE_NAME, CONSTS.flags.exireAtTurnEnd);\n        const ignoreRange = this.itemPf.getFlag(MODULE_NAME, CONSTS.flags.ignoreRange);\n        const ok = localize(\"ok\");\n\n        const dialogResult = await warpgate.menu({\n            inputs: [\n                { type: 'info', label: localizeF('templates.placement.selection.label', { itemType: this.itemPf.type }) },\n                { type: 'radio', label: this._placementTypes[CONSTS.placement.circle.grid].label, options: ['placementType', currentPlacementType === this._placementTypes[CONSTS.placement.circle.grid].key] },\n                { type: 'radio', label: this._placementTypes[CONSTS.placement.circle.self].label, options: ['placementType', currentPlacementType === this._placementTypes[CONSTS.placement.circle.self].key] },\n                { type: 'radio', label: this._placementTypes[CONSTS.placement.circle.splash].label, options: ['placementType', currentPlacementType === this._placementTypes[CONSTS.placement.circle.splash].key] },\n                { type: 'radio', label: this._placementTypes[CONSTS.placement.useSystem].label, options: ['placementType', currentPlacementType === this._placementTypes[CONSTS.placement.useSystem].key] },\n                { type: 'info', label: '<hr style=\"width: 100%;\" />' },\n                { type: 'info', label: localize('templates.circle.placement.type.label') },\n                { type: 'radio', label: localize('templates.circle.placement.type.burst'), options: ['areaType', areaType === 'burst'] },\n                { type: 'radio', label: localize('templates.circle.placement.type.emanation'), options: ['areaType', areaType === 'emanation'] },\n                { type: 'radio', label: localize('templates.circle.placement.type.spread'), options: ['areaType', areaType === 'spread'] },\n                { type: 'checkbox', label: localize('templates.deleteAtTurnEnd'), options: !!deleteAtTurnEnd },\n                { type: 'checkbox', label: localize('templates.ignoreRange'), options: !!ignoreRange },\n                { type: 'checkbox', label: localize('templates.circle.placement.attachToToken'), options: !!movesWithToken },\n            ],\n            buttons: [\n                {\n                    label: ok,\n                    value: ok,\n                },\n                {\n                    label: localize('cancel')\n                },\n            ],\n        }, {\n            title: localizeF('templates.modalTitle', { itemName: this.itemPf.data.name }),\n        });\n\n        ifDebug(() => console.log('circle dialogResult', dialogResult));\n\n        const { buttons: confirmed } = dialogResult;\n\n        if (confirmed) {\n            const [_, grid, self, splash, useDefault, __, ___, burstResult, emanationResult, spreadResult, deleteAtTurnEndResult, ignoreRangeResult, movesWithTokenResult] = dialogResult.inputs;\n            const chosenPlacement = this._getPlacementForLabel(grid || self || splash || useDefault);\n            const chosenAreaType = (burstResult && CONSTS.areaType.burst)\n                || (spreadResult && CONSTS.areaType.spread)\n                || (emanationResult && CONSTS.areaType.emanation)\n                || '';\n            const flags = {\n                [MODULE_NAME]: {\n                    [CONSTS.flags.placementType]: chosenPlacement,\n                    [CONSTS.flags.circle.areaType]: chosenAreaType,\n                    [CONSTS.flags.circle.movesWithToken]: !!movesWithTokenResult,\n                    [CONSTS.flags.exireAtTurnEnd]: !!deleteAtTurnEndResult,\n                    [CONSTS.flags.ignoreRange]: !!ignoreRangeResult,\n                }\n            };\n            await this.itemPf.update({ flags });\n        }\n\n        return !!confirmed;\n    }\n\n    _getAreaType = () => {\n        const areaType = this.itemPf.getFlag(MODULE_NAME, CONSTS.flags.circle.areaType);\n        if (areaType) {\n            return areaType;\n        }\n\n        // todo extract these to either a language or a game setting to handle localized terms\n        const spellArea = this.itemPf.data.data.spellArea?.toLowerCase() ?? '';\n        if (spellArea.includes('emanat') || spellArea.includes(localize('templates.circle.placement.type.emanation').toLowerCase())) {\n            return CONSTS.areaType.emanation;\n        }\n        else if (spellArea.includes('spread') || spellArea.includes(localize('templates.circle.placement.type.spread').toLowerCase())) {\n            return CONSTS.areaType.spread;\n        }\n\n        return CONSTS.areaType.burst;\n    };\n\n    _getPlacementForLabel = (label) => {\n        for (const placementTypeKey in this._placementTypes) {\n            const placement = this._placementTypes[placementTypeKey];\n            if (placement.label === label) {\n                return placement.key;\n            }\n        }\n        return this._placementTypes[CONSTS.placement.circle.grid].key;\n    };\n\n    _getPlacementType = () => {\n        const placementType = this.itemPf.getFlag(MODULE_NAME, CONSTS.flags.placementType);\n        return placementType || this._placementTypes[CONSTS.placement.circle.grid].key;\n    };\n}\n","import { CONSTS, MODULE_NAME } from '../../consts';\r\nimport { ifDebug, localize, localizeF } from '../utils';\r\n\r\nexport class ConePlacement {\r\n    constructor(itemPf) {\r\n        this.itemPf = itemPf;\r\n    }\r\n\r\n    _placementTypes = {\r\n        [CONSTS.placement.cone.self]: {\r\n            key: CONSTS.placement.cone.self,\r\n            label: localize('templates.cone.placement.self.label'),\r\n        },\r\n        [CONSTS.placement.cone.selectTargetSquare]: {\r\n            key: CONSTS.placement.cone.selectTargetSquare,\r\n            label: localize('templates.cone.placement.selectTargetSquare.label'),\r\n        },\r\n        [CONSTS.placement.useSystem]: {\r\n            key: CONSTS.placement.useSystem,\r\n            label: localize('templates.placement.useSystem.label'),\r\n        },\r\n    };\r\n\r\n    /**\r\n     * Shows the menu, saves the result, then returns the result\r\n     *\r\n     * @returns {bool} True if a placement type was selected, false if it was canceled.\r\n     */\r\n    async showPlacementMenu() {\r\n        const currentPlacementType = this._getPlacementType();\r\n        const deleteAtTurnEnd = this.itemPf.getFlag(MODULE_NAME, CONSTS.flags.exireAtTurnEnd);\r\n        const ok = localize('ok');\r\n\r\n        const dialogResult = await warpgate.menu({\r\n            inputs: [\r\n                { type: 'info', label: localizeF('templates.placement.selection.label', { itemType: this.itemPf.type }) },\r\n                { type: 'radio', label: this._placementTypes[CONSTS.placement.cone.self].label, options: ['placementType', currentPlacementType === this._placementTypes[CONSTS.placement.cone.self].key] },\r\n                { type: 'radio', label: this._placementTypes[CONSTS.placement.cone.selectTargetSquare].label, options: ['placementType', currentPlacementType === this._placementTypes[CONSTS.placement.cone.selectTargetSquare].key] },\r\n                { type: 'radio', label: this._placementTypes[CONSTS.placement.useSystem].label, options: ['placementType', currentPlacementType === this._placementTypes[CONSTS.placement.useSystem].key] },\r\n                { type: 'checkbox', label: localize('templates.deleteAtTurnEnd'), options: !!deleteAtTurnEnd },\r\n            ],\r\n            buttons: [\r\n                {\r\n                    label: ok,\r\n                    value: ok,\r\n                },\r\n                {\r\n                    label: localize('cancel')\r\n                },\r\n            ],\r\n        }, {\r\n            title: localizeF('templates.modalTitle', { itemName: this.itemPf.data.name }),\r\n        });\r\n\r\n        ifDebug(() => console.log('cone dialogResult', dialogResult));\r\n\r\n        const { buttons: confirmed } = dialogResult;\r\n\r\n        if (confirmed) {\r\n            const [_, self, selectTargetSquare, useSystem, deleteAtTurnEndResult] = dialogResult.inputs;\r\n            const chosenPlacement = this._getPlacementForLabel(selectTargetSquare || self || useSystem);\r\n            const flags = {\r\n                [MODULE_NAME]: {\r\n                    [CONSTS.flags.placementType]: chosenPlacement,\r\n                    [CONSTS.flags.exireAtTurnEnd]: !!deleteAtTurnEndResult,\r\n                }\r\n            };\r\n            await this.itemPf.update({ flags });\r\n        }\r\n\r\n        return !!confirmed;\r\n    }\r\n\r\n    _getSize() {\r\n        const rollData = this.itemPf.actor._rollData;\r\n        return typeof this.itemPf.data.data.measureTemplate.size === 'string'\r\n            ? RollPF.safeTotal(this.itemPf.data.data.measureTemplate.size, rollData)\r\n            : game.pf1.utils.convertDistance(this.itemPf.data.data.measureTemplate.size)[0];\r\n    }\r\n\r\n    _getPlacementForLabel = (label) => {\r\n        for (const placementTypeKey in this._placementTypes) {\r\n            const placement = this._placementTypes[placementTypeKey];\r\n            if (placement.label === label) {\r\n                return placement.key;\r\n            }\r\n        }\r\n        return this._placementTypes[CONSTS.placement.cone.self].key;\r\n    };\r\n\r\n    _getPlacementType = () => {\r\n        const placementType = this.itemPf.getFlag(MODULE_NAME, CONSTS.flags.placementType);\r\n        return placementType || this._placementTypes[CONSTS.placement.cone.self].key;\r\n    };\r\n}\r\n","export default `\r\n<div class=\"form-group\">\r\n    <label>Advanced Template Options</label>\r\n    <div class=\"form-fields\">\r\n        <button type=\"button\" class=\"file-picker-alt\">\r\n        </button>\r\n    </div>\r\n</div>`;\r\n","import { CirclePlacement } from '../template-placement/circle-placement';\r\nimport { ConePlacement } from '../template-placement/cone-placement';\r\nimport { localize } from '../utils';\r\nimport template from './template.js';\r\n\r\n/**\r\n * Adds advanced template options button to abilities with configured templates (that are supported)\r\n *\r\n * @param {*} sheet The actor sheet\r\n *\r\n * @param {*} jq jquery\r\n *\r\n * @param {*} _options unused\r\n */\r\nexport default async function (sheet, jq, _options) {\r\n    const item = sheet.item;\r\n    const type = item?.data.data.measureTemplate?.type;\r\n    if (!['circle', 'cone'].includes(type)) {\r\n        return;\r\n    }\r\n\r\n    const templateGroupOptions = jq[0].querySelector('input[name=\"data.measureTemplate.overrideTexture\"]')?.parentElement.parentElement;\r\n\r\n    if (templateGroupOptions) {\r\n        const div = document.createElement('div');\r\n        div.innerHTML = template;\r\n\r\n        const button = div.querySelector('button');\r\n        button.innerText = localize('templates.chooseOptions');\r\n        button.addEventListener('click',\r\n            async () => {\r\n                switch (type) {\r\n                    case 'circle':\r\n                        {\r\n                            const placement = new CirclePlacement(item);\r\n                            await placement.showPlacementMenu();\r\n                        }\r\n                        break;\r\n                    case 'cone':\r\n                        {\r\n                            const placement = new ConePlacement(item);\r\n                            await placement.showPlacementMenu();\r\n                        }\r\n                        break;\r\n                }\r\n            });\r\n\r\n        templateGroupOptions.after(div.firstElementChild);\r\n    }\r\n}\r\n","import { CONSTS, MODULE_NAME } from '../consts';\nimport { Settings } from '../settings';\nimport { getToken, ifDebug, localize, localizeF } from './utils';\n\n// unfortunately, since I'm extenidng a class defined in PF1, there's no way to do this in a traditional \"one class per file\" because\n// then it would need to exist as soon as Foundry starts. So it can't be in its own file and exported. It needs to all be defined in\n// memory at startup after PF1 has been initialized\nconst initMeasuredTemplate = () => {\n    const MeasuredTemplatePF = CONFIG.MeasuredTemplate.objectClass;\n\n    class MeasuredTemplatePFAdvanced extends MeasuredTemplatePF {\n        get shouldOverrideTokenEmanation() {\n            return game.settings.get('pf1', 'measureStyle')\n                && this.data.t === 'circle'\n                && this.data.flags?.[MODULE_NAME]?.[CONSTS.flags.placementType] === CONSTS.placement.circle.self\n                && ['burst', 'emanation'].includes(this.data.flags?.[MODULE_NAME]?.[CONSTS.flags.circle.areaType]);\n        }\n\n        get hideHighlight() {\n            return !!this.data.flags?.[MODULE_NAME]?.[CONSTS.flags.hideHighlight];\n        }\n\n        get tokenSizeSquares() {\n            const tokenId = this.data.flags?.[MODULE_NAME]?.tokenId;\n            const token = canvas.tokens.placeables.find((x) => x.id === tokenId);\n            const sizeSquares = token?.data.width || 1;\n            return { token, sizeSquares };\n        }\n\n        get tokenGridCorners() {\n            const { sizeSquares } = this.tokenSizeSquares;\n            const { x, y } = this.data;\n            const gridSize = canvas.grid.h;\n\n            const bottom = y + gridSize * sizeSquares / 2;\n            const left = x - gridSize * sizeSquares / 2;\n            const top = y - gridSize * sizeSquares / 2;\n            const right = x + gridSize * sizeSquares / 2;\n\n            const rightSpots = [...new Array(sizeSquares + 1)].map((_, i) => ({\n                x: right,\n                y: top + gridSize * i,\n            }));\n            const bottomSpots = [...new Array(sizeSquares + 1)].map((_, i) => ({\n                x: right - gridSize * i,\n                y: bottom,\n            }));\n            bottomSpots.shift();\n            bottomSpots.pop();\n            const leftSpots = [...new Array(sizeSquares + 1)].map((_, i) => ({\n                x: left,\n                y: bottom - gridSize * i,\n            }));\n            const topSpots = [...new Array(sizeSquares + 1)].map((_, i) => ({\n                x: left + gridSize * i,\n                y: top,\n            }));\n            topSpots.shift();\n            topSpots.pop();\n\n            const allSpots = [\n                ...rightSpots,\n                ...bottomSpots,\n                ...leftSpots,\n                ...topSpots,\n            ];\n\n            return allSpots;\n        }\n\n        _getEmanationShape() {\n            const { sizeSquares } = this.tokenSizeSquares;\n\n            const dimensions = canvas.dimensions;\n            let { distance: radius } = this.data;\n            radius *= (dimensions.size / dimensions.distance);\n            radius += dimensions.size * sizeSquares / 2;\n            this.shape = new PIXI.RoundedRectangle(-radius, -radius, radius * 2, radius * 2, radius - dimensions.size * sizeSquares / 2);\n        }\n\n        /** @override */\n        refresh() {\n            if (!this.shouldOverrideTokenEmanation) {\n                return super.refresh();\n            }\n\n            /* ALL OF THIS IS THE ORIGINAL METHOD EXCEPT FOR THE PARTS IN MY IF(SHOULDOVERRIDE) BLOCKS */\n            const d = canvas.dimensions;\n            this.position.set(this.data.x, this.data.y);\n\n            // Extract and prepare data\n            let { direction, distance, width } = this.data;\n            distance *= (d.size / d.distance);\n            width *= (d.size / d.distance);\n            direction = Math.toRadians(direction);\n            if (this.shouldOverrideTokenEmanation) {\n                const { sizeSquares } = this.tokenSizeSquares;\n                distance += d.size * sizeSquares / 2;\n            }\n\n            // Create ray and bounding rectangle\n            this.ray = Ray.fromAngle(this.data.x, this.data.y, direction, distance);\n\n            // Get the Template shape\n            switch (this.data.t) {\n                case 'circle':\n                    this.shape = this._getCircleShape(distance);\n                    break;\n                case 'cone':\n                    this.shape = this._getConeShape(direction, this.data.angle, distance);\n                    break;\n                case 'rect':\n                    this.shape = this._getRectShape(direction, distance);\n                    break;\n                case 'ray':\n                    this.shape = this._getRayShape(direction, distance, width);\n                    break;\n            }\n            if (this.shouldOverrideTokenEmanation) {\n                this._getEmanationShape();\n            }\n\n            // Draw the Template outline\n            this.template.clear().lineStyle(this._borderThickness, this.borderColor, 0.75).beginFill(0x000000, 0.0);\n\n            // Fill Color or Texture\n            if (this.texture) {\n                this.template.beginTextureFill({\n                    texture: this.texture\n                });\n            }\n            else {\n                this.template.beginFill(0x000000, 0.0);\n            }\n\n            // Draw the shape\n            this.template.drawShape(this.shape);\n\n            // Draw origin and destination points\n            this.template.lineStyle(this._borderThickness, 0x000000)\n                .beginFill(0x000000, 0.5)\n                .drawCircle(0, 0, 6)\n                .drawCircle(this.ray.dx, this.ray.dy, 6);\n\n            // Update the HUD\n            this.hud.icon.visible = this.layer._active;\n            this.hud.icon.border.visible = this._hover;\n\n            this._refreshRulerText();\n\n            return this;\n        }\n\n        /**\n         * Draw the ControlIcon for the MeasuredTemplate\n         *\n         * @returns {ControlIcon}\n         *\n         * @private\n         */\n        /** @override */\n        _drawControlIcon() {\n            const size = Math.max(Math.round((canvas.dimensions.size * 0.5) / 20) * 20, 40);\n            const iconTexture = this.data.flags?.[MODULE_NAME]?.icon;\n            const icon = new ControlIcon({ texture: iconTexture || CONFIG.controlIcons.template, size });\n            icon.x -= (size * 0.5);\n            icon.y -= (size * 0.5);\n            return icon;\n        }\n\n        /** @override */\n        getHighlightedSquares() {\n            if (this.hideHighlight) {\n                return [];\n            }\n\n            if (!this.shouldOverrideTokenEmanation) {\n                return super.getHighlightedSquares();\n            }\n\n            if (!this.id || !this.shape) {\n                return [];\n            }\n\n            const { token, sizeSquares } = this.tokenSizeSquares;\n            if (!token || sizeSquares < 2) {\n                return super.getHighlightedSquares();\n            }\n\n            const grid = canvas.grid;\n            const d = canvas.dimensions;\n\n            // Get number of rows and columns\n            const nr = Math.ceil((this.data.distance * 1.5) / d.distance / (d.size / grid.h));\n            const nc = Math.ceil((this.data.distance * 1.5) / d.distance / (d.size / grid.w));\n\n            // Get the center of the grid position occupied by the template\n            const result = [];\n            const origins = this.tokenGridCorners;\n\n            origins.forEach(({ x, y }) => {\n                const [cx, cy] = grid.getCenter(x, y);\n                const [col0, row0] = grid.grid.getGridPositionFromPixels(cx, cy);\n\n                const measureDistance = function (p0, p1) {\n                    const gs = canvas.dimensions.size;\n                    const ray = new Ray(p0, p1);\n                    // How many squares do we travel across to get there? If 2.3, we should count that as 3 instead of 2; hence, Math.ceil\n                    const nx = Math.ceil(Math.abs(ray.dx / gs));\n                    const ny = Math.ceil(Math.abs(ray.dy / gs));\n\n                    // Get the number of straight and diagonal moves\n                    const nDiagonal = Math.min(nx, ny);\n                    const nStraight = Math.abs(ny - nx);\n\n                    // Diagonals in PF pretty much count as 1.5 times a straight\n                    const distance = Math.floor(nDiagonal * 1.5 + nStraight);\n                    const distanceOnGrid = distance * canvas.dimensions.distance;\n                    return distanceOnGrid;\n                };\n\n                for (let a = -nc; a < nc; a++) {\n                    for (let b = -nr; b < nr; b++) {\n                        // Position of cell's top-left corner, in pixels\n                        const [gx, gy] = canvas.grid.grid.getPixelsFromGridPosition(col0 + a, row0 + b);\n                        // Position of cell's center, in pixels\n                        const [cellCenterX, cellCenterY] = [gx + d.size * 0.5, gy + d.size * 0.5];\n\n                        // Determine point of origin\n                        const origin = { x, y };\n\n                        // Determine point we're measuring the distance to - always in the center of a grid square\n                        const destination = { x: cellCenterX, y: cellCenterY };\n\n                        const distance = measureDistance(destination, origin);\n                        if (distance <= this.data.distance) {\n                            result.push({ x: gx, y: gy });\n                        }\n                    }\n                }\n            });\n\n            const filtered = [...(new Set(result.map(JSON.stringify)))].map(JSON.parse);\n            return filtered;\n        }\n    }\n\n    CONFIG.MeasuredTemplate.objectClass = MeasuredTemplatePFAdvanced;\n\n    class AbilityTemplateAdvanced extends MeasuredTemplatePFAdvanced {\n        static async fromData(templateData, itemPf) {\n            const { t: type, distance } = templateData;\n            if (!type\n                || !distance\n                || !canvas.scene\n                || !['cone', 'circle'].includes(type)\n            ) {\n                return null;\n            }\n\n            // Return the template constructed from the item data\n            const cls = CONFIG.MeasuredTemplate.documentClass;\n            const template = new cls(templateData, { parent: canvas.scene });\n            const placementType = itemPf.getFlag(MODULE_NAME, CONSTS.flags.placementType);\n\n            let abilityCls;\n            switch (type) {\n                case 'circle':\n                    switch (placementType) {\n                        case CONSTS.placement.circle.self:\n                            abilityCls = AbilityTemplateCircleSelf;\n                            break;\n                        case CONSTS.placement.circle.splash:\n                            abilityCls = AbilityTemplateCircleSplash;\n                            break;\n                        case CONSTS.placement.circle.grid:\n                        default:\n                            abilityCls = AbilityTemplateCircle;\n                            break;\n                    }\n                    break;\n                case 'cone':\n                    switch (placementType) {\n                        case CONSTS.placement.cone.selectTargetSquare:\n                            abilityCls = AbilityTemplateConeTarget;\n                            break;\n                        case CONSTS.placement.cone.self:\n                        default:\n                            abilityCls = AbilityTemplateConeSelf;\n                            break;\n                    }\n                    break;\n            }\n\n            const thisTemplate = new abilityCls(template);\n            await thisTemplate.initializePlacement(itemPf);\n\n            return thisTemplate;\n        }\n\n        async drawPreview() {\n            const initialLayer = canvas.activeLayer;\n\n            await this.draw();\n            this.active = true;\n            this.layer.activate();\n            this.layer.preview.addChild(this);\n\n            if (this.controlIcon) {\n                this.controlIcon.removeAllListeners();\n            }\n            this.hitArea = new PIXI.Polygon([]);\n\n            const finalized = await this.commitPreview();\n\n            this.active = false;\n            const hl = canvas.grid.getHighlightLayer(`Template.${this.id}`);\n            hl.clear();\n\n            this.destroy();\n            initialLayer.activate();\n\n            return finalized\n                ? {\n                    result: true,\n                    place: async () => {\n                        this.data.update(this.data);\n                        const doc = (await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", [this.data.toObject()]))[0];\n                        this.document = doc;\n                        return doc;\n                    },\n                    delete: () => {\n                        return this.document.delete();\n                    },\n                }\n                : { result: false };\n        }\n\n        refresh() {\n            if (!this.template || !canvas.scene) {\n                return;\n            }\n\n            super.refresh();\n\n            if (this.active) {\n                this.highlightGrid();\n            }\n\n            return this;\n        }\n\n\n        /**\n         * returns true if committed, false if cancelled\n         */\n        async commitPreview() { }\n\n        /**\n         * sets up data specififc to template placement (initial position, rotation, set up points array for cones around token, extra width info for emanations, etc)\n         *\n         * @param {ItemPF} itemPf used to grab the token data for initial placement\n         */\n        async initializePlacement(itemPf) { }\n    }\n\n    class AbilityTemplateCircleSelf extends AbilityTemplateAdvanced {\n        /** @override */\n        async commitPreview() {\n            ifDebug(() => console.log(`inside ${this.constructor.name} - ${this.commitPreview.name}`));\n\n            return true;\n        }\n\n        /** @override */\n        async initializePlacement(itemPf) {\n            ifDebug(() => console.log(`inside ${this.constructor.name} - ${this.initializePlacement.name}`));\n\n            const token = getToken(itemPf) || { center: { x: 0, y: 0 } };\n            const { x, y } = token.center;\n            this.data.x = x;\n            this.data.y = y;\n\n            if (Settings.target && !isNaN(x) && !isNaN(x)) {\n                const targets = this.getTokensWithin();\n                const ids = targets.map((t) => t.id);\n                game.user.updateTokenTargets(ids);\n            }\n        }\n    }\n\n    class AbilityTemplateCircle extends AbilityTemplateAdvanced {\n        _maxRange;\n        _hasMaxRange;\n        _minRange;\n        _hasMinRange;\n        _tokenSquare;\n\n        _calculateTokenSquare(token) {\n            const heightSquares = Math.max(Math.round(token.data.height), 1);\n            const widthSquares = Math.max(Math.round(token.data.width), 1);\n\n            const gridSize = canvas.grid.h;\n            const { x, y, h, w } = token;\n\n            const bottom = y + h;\n            const left = x;\n            const top = y;\n            const right = x + w;\n\n            const rightSpots = [...new Array(heightSquares)].map((_, i) => ({\n                x: right,\n                y: top + gridSize * i,\n            }));\n            const leftSpots = [...new Array(heightSquares)].map((_, i) => ({\n                x: left,\n                y: bottom - gridSize * i,\n            }));\n            const topSpots = [...new Array(widthSquares)].map((_, i) => ({\n                x: left + gridSize * i,\n                y: top,\n            }));\n            const bottomSpots = [...new Array(widthSquares)].map((_, i) => ({\n                x: right - gridSize * i,\n                y: bottom,\n            }));\n            const allSpots = [\n                ...rightSpots,\n                ...bottomSpots,\n                ...leftSpots,\n                ...topSpots,\n            ];\n\n            return {\n                x: left,\n                y: top,\n                center: token.center,\n                top,\n                bottom,\n                left,\n                right,\n                h,\n                w,\n                heightSquares,\n                widthSquares,\n                allSpots,\n            };\n        }\n\n        /** @override */\n        async commitPreview() {\n            ifDebug(() => console.log(`inside ${this.constructor.name} - ${this.commitPreview.name}`));\n            if (Settings.target) {\n                game.user.updateTokenTargets();\n            }\n\n            const existingIcon = this.controlIcon?.iconSrc;\n            let isInRange = true;\n\n            const updateTemplateLocation = async (crosshairs) => {\n                while (crosshairs.inFlight) {\n                    await warpgate.wait(20);\n                    this.data.flags[MODULE_NAME].icon = existingIcon;\n\n                    const { x, y } = crosshairs.center;\n                    if (this.data.x === x && this.data.y === y) {\n                        continue;\n                    }\n\n                    if ((this._hasMaxRange || this._hasMinRange) && !this.data.flags[MODULE_NAME].ignoreRange) {\n                        const rays = this._tokenSquare.allSpots.map((spot) => ({\n                            ray: new Ray(spot, crosshairs),\n                        }));\n                        const distances = rays.map((ray) => canvas.grid.measureDistances([ray], { gridSpaces: true })[0]);\n                        const range = Math.min(...distances);\n\n                        let icon;\n                        if (this._hasMinRange && range < this._minRange\n                            || this._hasMaxRange && range > this._maxRange\n                        ) {\n                            icon = 'icons/svg/hazard.svg';\n                            this.data.flags[MODULE_NAME][CONSTS.flags.hideHighlight] = true;\n                            isInRange = false;\n                        }\n                        else {\n                            icon = existingIcon;\n                            this.data.flags[MODULE_NAME][CONSTS.flags.hideHighlight] = false;\n                            isInRange = true;\n                        }\n\n                        const unit = game.settings.get('pf1', 'units') === 'imperial'\n                            ? game.i18n.localize('PF1.DistFtShort')\n                            : game.i18n.localize('PF1.DistMShort');\n                        crosshairs.label = `${range} ${unit}`;\n                        crosshairs.label = localizeF('range', { range, unit });\n\n                        if (icon && icon !== this.controlIcon?.iconSrc) {\n                            this.data.flags[MODULE_NAME].icon = icon;\n                            if (this.controlIcon) {\n                                this.controlIcon.destroy();\n                            }\n                            this.controlIcon = this.addChild(this._drawControlIcon());\n                        }\n                    }\n\n                    this.data.x = x;\n                    this.data.y = y;\n                    this.refresh();\n\n                    if (Settings.target) {\n                        const targets = this.getTokensWithin();\n                        const ids = targets.map((t) => t.id);\n                        game.user.updateTokenTargets(ids);\n                    }\n                }\n            };\n\n            const targetConfig = {\n                drawIcon: false,\n                drawOutline: false,\n                interval: 1,\n            };\n            const crosshairs = await warpgate.crosshairs.show(\n                targetConfig,\n                {\n                    show: updateTemplateLocation\n                }\n            );\n\n            if (crosshairs.cancelled || !isInRange) {\n                if (Settings.target) {\n                    game.user.updateTokenTargets();\n                }\n                return false;\n            }\n\n            return true;\n        }\n\n        /** @override */\n        async initializePlacement(itemPf) {\n            ifDebug(() => console.log(`inside ${this.constructor.name} - ${this.initializePlacement.name}`));\n\n            const token = getToken(itemPf);\n\n            if (token) {\n                this._maxRange = this.data.flags?.[MODULE_NAME]?.maxRange;\n                this._hasMaxRange = !!this._maxRange && !isNaN(this._maxRange);\n                this._minRange = this.data.flags?.[MODULE_NAME]?.minRange;\n                this._hasMinRange = !!this._minRange && !isNaN(this._minRange);\n\n                this._tokenSquare = this._calculateTokenSquare(token);\n            }\n\n            const mouse = canvas.app.renderer.plugins.interaction.mouse;\n            const position = mouse.getLocalPosition(canvas.app.stage);\n            const { x, y } = position;\n            this.data.x = x;\n            this.data.y = y;\n        }\n    }\n\n    class AbilityTemplateCircleSplash extends AbilityTemplateCircle {\n        /** @override */\n        async commitPreview() {\n            ifDebug(() => console.log(`inside ${this.constructor.name} - ${this.commitPreview.name}`));\n            if (Settings.target) {\n                game.user.updateTokenTargets();\n            }\n\n            const existingIcon = this.controlIcon?.iconSrc;\n            let isInRange = true;\n\n            const updateTemplateLocation = async (crosshairs) => {\n                while (crosshairs.inFlight) {\n                    await warpgate.wait(20);\n\n                    this.data.flags[MODULE_NAME].icon = existingIcon;\n\n                    const { x, y } = crosshairs.center;\n                    if (this.data.x === x && this.data.y === y) {\n                        continue;\n                    }\n\n                    let mouse = canvas.app.renderer.plugins.interaction.mouse;\n                    let mouseCoords = mouse.getLocalPosition(canvas.app.stage);\n                    const boundsContains = (bounds, point) =>\n                        bounds.left <= point.x\n                        && point.x <= bounds.right\n                        && bounds.top <= point.y\n                        && point.y <= bounds.bottom;\n\n                    const found = !!canvas.tokens.placeables.map(x => x.bounds).find(b => boundsContains(b, mouseCoords));\n                    crosshairs.interval = found ? -1 : 1;\n\n                    if ((this._hasMaxRange || this._hasMinRange) && !this.data.flags[MODULE_NAME].ignoreRange) {\n                        const rays = this._tokenSquare.allSpots.map((spot) => ({\n                            ray: new Ray(spot, crosshairs),\n                        }));\n                        const distances = rays.map((ray) => canvas.grid.measureDistances([ray], { gridSpaces: true })[0]);\n                        const range = Math.min(...distances);\n\n                        let icon;\n                        if (this._hasMinRange && range < this._minRange\n                            || this._hasMaxRange && range > this._maxRange\n                        ) {\n                            icon = 'icons/svg/hazard.svg';\n                            this.data.flags[MODULE_NAME][CONSTS.flags.hideHighlight] = true;\n                            isInRange = false;\n                        }\n                        else {\n                            icon = existingIcon;\n                            this.data.flags[MODULE_NAME][CONSTS.flags.hideHighlight] = false;\n                            isInRange = true;\n                        }\n\n                        const unit = game.settings.get('pf1', 'units') === 'imperial'\n                            ? game.i18n.localize('PF1.DistFtShort')\n                            : game.i18n.localize('PF1.DistMShort');\n                        crosshairs.label = `${range} ${unit}`;\n                        crosshairs.label = localizeF('range', { range, unit });\n\n                        if (icon && icon !== this.controlIcon?.iconSrc) {\n                            this.data.flags[MODULE_NAME].icon = icon;\n                            if (this.controlIcon) {\n                                this.controlIcon.destroy();\n                            }\n                            this.controlIcon = this.addChild(this._drawControlIcon());\n                        }\n                    }\n\n                    this.data.x = x;\n                    this.data.y = y;\n                    this.refresh();\n\n                    if (Settings.target) {\n                        const targets = this.getTokensWithin();\n                        const ids = targets.map((t) => t.id);\n                        game.user.updateTokenTargets(ids);\n                    }\n                }\n            };\n\n            const targetConfig = {\n                drawIcon: false,\n                drawOutline: false,\n                interval: 1,\n            };\n            const crosshairs = await warpgate.crosshairs.show(\n                targetConfig,\n                {\n                    show: updateTemplateLocation\n                }\n            );\n\n            if (crosshairs.cancelled || !isInRange) {\n                if (Settings.target) {\n                    game.user.updateTokenTargets();\n                }\n                return false;\n            }\n\n            return true;\n        }\n    }\n\n    class AbilityTemplateConeBase extends AbilityTemplateAdvanced {\n        _tokenSquare;\n        _is15;\n\n        /** @override */\n        async commitPreview() {\n            ifDebug(() => console.log(`inside ${this.constructor.name} - ${this.commitPreview.name}`));\n\n            if (Settings.target) {\n                game.user.updateTokenTargets();\n            }\n\n            const targetConfig = {\n                drawIcon: false,\n                drawOutline: false,\n            };\n\n            let currentSpotIndex = 0;\n            const updateTemplateRotation = async (crosshairs) => {\n                while (crosshairs.inFlight) {\n                    await warpgate.wait(100);\n\n                    const totalSpots = this._tokenSquare.allSpots.length;\n                    const radToNormalizedAngle = (rad) => {\n                        let angle = (rad * 180 / Math.PI) % 360;\n                        // offset the angle for even-sided tokens, because it's centered in the grid it's just wonky without the offset\n                        const offset = this._is15 ? 0 : 1;\n                        if (this._tokenSquare.heightSquares % 2 === offset && this._tokenSquare.widthSquares % 2 === offset) {\n                            angle -= (360 / totalSpots) / 2;\n                        }\n                        const normalizedAngle = Math.round(angle / (360 / totalSpots)) * (360 / totalSpots);\n                        return normalizedAngle < 0\n                            ? normalizedAngle + 360\n                            : normalizedAngle;\n                    };\n\n                    const ray = new Ray(this._tokenSquare.center, crosshairs);\n                    const angle = radToNormalizedAngle(ray.angle);\n                    const spotIndex = Math.ceil(angle / 360 * totalSpots);\n                    if (spotIndex === currentSpotIndex) {\n                        continue;\n                    }\n\n                    currentSpotIndex = spotIndex;\n                    const spot = this._tokenSquare.allSpots[currentSpotIndex];\n                    const { direction, x, y } = spot;\n\n                    this.data.direction = direction;\n                    this.data.x = x;\n                    this.data.y = y;\n                    this.refresh();\n                    if (Settings.target) {\n                        const targets = this.getTokensWithin();\n                        const ids = targets.map((t) => t.id);\n                        game.user.updateTokenTargets(ids);\n                    }\n                }\n            };\n\n            const rotateCrosshairs = await warpgate.crosshairs.show(\n                targetConfig,\n                {\n                    show: updateTemplateRotation\n                }\n            );\n\n            if (rotateCrosshairs.cancelled) {\n                if (Settings.target) {\n                    game.user.updateTokenTargets();\n                }\n                return false;\n            }\n\n            return true;\n        }\n\n        /** @override */\n        async initializeConeData(token) {\n            ifDebug(() => console.log(`inside ${this.constructor.name} - ${this.initializePlacement.name}`));\n\n            const { distance } = this.data;\n            this._is15 = distance === 15;\n\n            if (typeof token === 'undefined' || !token) {\n                const sourceConfig = {\n                    drawIcon: true,\n                    drawOutline: false,\n                    interval: -1,\n                    label: 'Cone Start',\n                    // grab icon from item\n                };\n\n                const source = await warpgate.crosshairs.show(sourceConfig);\n                if (source.cancelled) {\n                    return;\n                }\n                this._tokenSquare = this._sourceSquare({ x: source.x, y: source.y }, 1, 1);\n            }\n            else {\n                const width = Math.max(Math.round(token.data.width), 1);\n                const height = Math.max(Math.round(token.data.height), 1);\n                this._tokenSquare = this._sourceSquare(token.center, width, height);\n            }\n\n            const { x, y } = this._tokenSquare.allSpots[0];\n            this.data.x = x;\n            this.data.y = y;\n            this.data.angle = 90;\n        }\n\n        _sourceSquare(center, widthSquares, heightSquares) {\n            const gridSize = canvas.grid.h;\n            const h = gridSize * heightSquares;\n            const w = gridSize * widthSquares;\n\n            const bottom = center.y + h / 2;\n            const left = center.x - w / 2;\n            const top = center.y - h / 2;\n            const right = center.x + w / 2;\n\n            // todo read from a gm setting to see if the gm wants to allow the alternate 15' option and figure how to do both simultaneously\n            // 15 foot cones originate in the middle of the grid, so for every square-edge there's one origin point instead of two\n            const gridOffset = this._is15 ? gridSize / 2 : 0;\n            const qtyOffset = this._is15 ? 0 : 1;\n\n            const rightSpots = [...new Array(heightSquares + qtyOffset)].map((_, i) => ({\n                direction: 0,\n                x: right,\n                y: top + gridSize * i + gridOffset,\n            }));\n            const bottomSpots = [...new Array(widthSquares + qtyOffset)].map((_, i) => ({\n                direction: 90,\n                x: right - gridSize * i - gridOffset,\n                y: bottom,\n            }));\n            const leftSpots = [...new Array(heightSquares + qtyOffset)].map((_, i) => ({\n                direction: 180,\n                x: left,\n                y: bottom - gridSize * i - gridOffset,\n            }));\n            const topSpots = [...new Array(widthSquares + qtyOffset)].map((_, i) => ({\n                direction: 270,\n                x: left + gridSize * i + gridOffset,\n                y: top,\n            }));\n            const allSpots = [\n                ...rightSpots.slice(Math.floor(rightSpots.length / 2)),\n                { direction: 45, x: right, y: bottom },\n                ...bottomSpots,\n                { direction: 135, x: left, y: bottom },\n                ...leftSpots,\n                { direction: 225, x: left, y: top },\n                ...topSpots,\n                { direction: 315, x: right, y: top },\n                ...rightSpots.slice(0, Math.floor(rightSpots.length / 2)),\n            ];\n\n            return {\n                x: left,\n                y: top,\n                center,\n                top,\n                bottom,\n                left,\n                right,\n                h,\n                w,\n                heightSquares,\n                widthSquares,\n                allSpots,\n            };\n        }\n    }\n\n    class AbilityTemplateConeSelf extends AbilityTemplateConeBase {\n        /** @override */\n        async initializePlacement(itemPf) {\n            ifDebug(() => console.log(`inside ${this.constructor.name} - ${this.initializePlacement.name}`));\n\n            const token = getToken(itemPf);\n            await super.initializeConeData(token);\n        }\n    }\n\n    class AbilityTemplateConeTarget extends AbilityTemplateConeBase {\n        /** @override */\n        async initializePlacement(itemPf) {\n            ifDebug(() => console.log(`inside ${this.constructor.name} - ${this.initializePlacement.name}`));\n\n            await super.initializeConeData();\n        }\n    }\n\n    game[MODULE_NAME] = {\n        AbilityTemplateAdvanced,\n        MeasuredTemplatePFAdvanced,\n    };\n};\n\nexport {\n    initMeasuredTemplate,\n};\n","import { CONSTS, MODULE_NAME } from \"../consts\";\r\n\r\nclass DurationTracker {\r\n    static endOfTurn = 'endOfTurn';\r\n\r\n    static endOfTurnExpirations = [];\r\n\r\n    static endOfTurnCallback(callback) {\r\n        DurationTracker.endOfTurnExpirations.push(callback);\r\n    }\r\n\r\n    static async expireAll() {\r\n        for (const e of DurationTracker.endOfTurnExpirations) {\r\n            try {\r\n                await e();\r\n            }\r\n            catch {\r\n                // don't really care\r\n            }\r\n        }\r\n        DurationTracker.endOfTurnExpirations = [];\r\n\r\n        await DurationTracker.removeEndOfTurnTemplates();\r\n    }\r\n\r\n    static async removeEndOfTurnTemplates() {\r\n        const templateIds = canvas.templates.placeables\r\n            .filter((t) => !!t.data.flags?.[MODULE_NAME]?.[CONSTS.flags.exireAtTurnEnd])\r\n            .map((t) => t.id);\r\n\r\n        if (templateIds.length) {\r\n            await canvas.scene.deleteEmbeddedDocuments(\"MeasuredTemplate\", templateIds);\r\n        }\r\n    }\r\n\r\n    static init() {\r\n        Hooks.on('deleteCombat', async (_combat) => {\r\n            warpgate.plugin.queueUpdate(() => DurationTracker.expireAll());\r\n        });\r\n\r\n        Hooks.on('updateCombat', async (combat, changed) => {\r\n            if (!('turn' in changed || 'round' in changed) && changed.round !== 1\r\n                || game.combats.get(combat.id).data.combatants.size === 0\r\n            ) {\r\n                return;\r\n            }\r\n\r\n            warpgate.plugin.queueUpdate(() => DurationTracker.expireAll());\r\n        });\r\n\r\n        Hooks.on('updateWorldTime', async (_worldTime, delta) => {\r\n            if (delta) {\r\n                warpgate.plugin.queueUpdate(() => DurationTracker.expireAll());\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport { DurationTracker };\r\n","import { CONSTS, MODULE_NAME } from \"../consts\";\r\nimport { ifDebug } from \"./utils\";\r\n\r\nconst deleteTemplatesForToken = async (token) => {\r\n    const templateIds = _getTemplateIdsForToken(token);\r\n    if (templateIds.length) {\r\n        ifDebug(() => console.log(`Deleting templates for token (${token.id})`, templateIds));\r\n        await canvas.scene.deleteEmbeddedDocuments(\"MeasuredTemplate\", templateIds);\r\n    }\r\n};\r\n\r\nconst moveTemplatesToToken = async (token) => {\r\n    const templateIds = _getTemplateIdsForToken(token);\r\n    if (templateIds.length) {\r\n        ifDebug(() => console.log(`Moving templates for token (${token.id})`, templateIds));\r\n        const updates = templateIds.map((id) => ({ _id: id, ...token.object.center }));\r\n        await canvas.scene.updateEmbeddedDocuments(\"MeasuredTemplate\", updates);\r\n    }\r\n};\r\n\r\nconst _getTemplateIdsForToken = (token) => canvas.templates.placeables\r\n    .filter((t) => !!t.data.flags?.[MODULE_NAME]?.[CONSTS.flags.circle.movesWithToken])\r\n    .filter((t) => t.data.flags?.[MODULE_NAME]?.tokenId === token.id)\r\n    .map((t) => t.id);\r\n\r\nexport {\r\n    deleteTemplatesForToken,\r\n    moveTemplatesToToken,\r\n};\r\n","import { registerSettings } from './settings.js';\n\nimport { MODULE_NAME } from './consts';\nimport promptMeasureTemplate from './scripts/template-placement/';\nimport injectTemplateSelector from './scripts/template-selector-injector';\nimport { initMeasuredTemplate } from './scripts/measured-template-pf-advanced';\nimport { DurationTracker } from './scripts/duration-tracker.js';\nimport { deleteTemplatesForToken, moveTemplatesToToken } from './scripts/sync-templates-to-token.js';\n\n// import BasicApplication from './view/BasicApplication.js';\n\n// Initialize module\nHooks.once('init', async () => {\n    console.log('ckl-advanced-templates-pf1 | Initializing ckl-advanced-templates-pf1');\n\n    registerSettings();\n});\n\n// When ready\nHooks.once('ready', async () => {\n    Hooks.on('renderItemSheetPF', injectTemplateSelector);\n\n    DurationTracker.init();\n\n    // new BasicApplication().render(true, { focus: true })\n});\n\n// Add any additional hooks if necessary\nHooks.on('pf1.postInit', () => {\n    initMeasuredTemplate();\n    libWrapper.register(MODULE_NAME, 'game.pf1.ItemAttack.promptMeasureTemplate', promptMeasureTemplate, 'MIXED');\n\n    Hooks.on('canvasReady', () => {\n        canvas.templates.placeables.forEach((template) => {\n            template.highlightGrid();\n        });\n    });\n});\n\nHooks.on('updateToken', async (token, update, _options, _userId) => {\n    // eslint-disable-next-line\n    if (!update?.hasOwnProperty('x') && !update?.hasOwnProperty('y')) {\n        return;\n    }\n\n    const gm = game.pf1.utils.getFirstActiveGM();\n    const isFirstGM = game.user === gm;\n\n    if (isFirstGM || (!gm && game.user.id === _userId)) {\n        await moveTemplatesToToken(token);\n    }\n});\n\nHooks.on('deleteToken', async (token, _options, _userId) => {\n    const gm = game.pf1.utils.getFirstActiveGM();\n    const isFirstGM = game.user === gm;\n\n    if (isFirstGM || (!gm && game.user.id === _userId)) {\n        await deleteTemplatesForToken(token);\n    }\n});\n"],"names":["MODULE_NAME","CONSTS","placement","circle","grid","self","splash","cone","selectTargetSquare","useSystem","flags","placementType","areaType","movesWithToken","exireAtTurnEnd","ignoreRange","hideHighlight","burst","emanation","spread","settings","client","debug","key","name","hint","type","Boolean","config","default","target","reExpand","world","cone15Alternate","coneRotation","initSetting","scope","Object","keys","map","forEach","setting","game","register","registerSettings","Settings","get","me","func","getToken","itemPf","parent","getActiveTokens","undefined","localize","i18n","localizeF","opts","format","promptMeasureTemplate","wrapped","shared","ifDebug","console","log","hasTemplatePermission","delete","place","result","getFlag","windows","values","ui","filter","x","minimize","_minimized","Promise","all","data","measureTemplate","token","icon","img","minRange","maxRange","templateData","_id","randomID","distance","_getSize","t","tokenId","id","user","userId","fillColor","overrideColor","customColor","color","texture","overrideTexture","customTexture","template","AbilityTemplateAdvanced","fromData","drawPreview","maximize","size","RollPF","safeTotal","rollData","pf1","utils","convertDistance","permissions","TEMPLATE_CREATE","includes","role","CirclePlacement","constructor","label","spellArea","toLowerCase","placementTypeKey","_placementTypes","showPlacementMenu","_getAreaType","currentPlacementType","_getPlacementType","deleteAtTurnEnd","ok","dialogResult","warpgate","menu","inputs","itemType","options","buttons","value","title","itemName","confirmed","_","useDefault","__","___","burstResult","emanationResult","spreadResult","deleteAtTurnEndResult","ignoreRangeResult","movesWithTokenResult","chosenPlacement","_getPlacementForLabel","chosenAreaType","update","ConePlacement","actor","_rollData","sheet","jq","_options","item","templateGroupOptions","querySelector","parentElement","div","document","createElement","innerHTML","button","innerText","addEventListener","after","firstElementChild","initMeasuredTemplate","MeasuredTemplatePF","CONFIG","MeasuredTemplate","objectClass","MeasuredTemplatePFAdvanced","shouldOverrideTokenEmanation","tokenSizeSquares","canvas","tokens","placeables","find","sizeSquares","width","tokenGridCorners","y","gridSize","h","bottom","left","top","right","rightSpots","Array","i","bottomSpots","shift","pop","leftSpots","topSpots","allSpots","_getEmanationShape","dimensions","radius","shape","PIXI","RoundedRectangle","refresh","d","position","set","direction","Math","toRadians","ray","Ray","fromAngle","_getCircleShape","_getConeShape","angle","_getRectShape","_getRayShape","clear","lineStyle","_borderThickness","borderColor","beginFill","beginTextureFill","drawShape","drawCircle","dx","dy","hud","visible","layer","_active","border","_hover","_refreshRulerText","_drawControlIcon","max","round","iconTexture","ControlIcon","controlIcons","getHighlightedSquares","nr","ceil","nc","w","origins","cx","cy","getCenter","col0","row0","getGridPositionFromPixels","measureDistance","p0","p1","gs","nx","abs","ny","nDiagonal","min","nStraight","floor","distanceOnGrid","a","b","gx","gy","getPixelsFromGridPosition","cellCenterX","cellCenterY","origin","destination","push","filtered","Set","JSON","stringify","parse","scene","cls","documentClass","abilityCls","AbilityTemplateCircleSelf","AbilityTemplateCircleSplash","AbilityTemplateCircle","AbilityTemplateConeTarget","AbilityTemplateConeSelf","thisTemplate","initializePlacement","initialLayer","activeLayer","draw","active","activate","preview","addChild","controlIcon","removeAllListeners","hitArea","Polygon","finalized","commitPreview","hl","getHighlightLayer","destroy","doc","createEmbeddedDocuments","toObject","highlightGrid","center","isNaN","targets","getTokensWithin","ids","updateTokenTargets","_calculateTokenSquare","heightSquares","height","widthSquares","existingIcon","iconSrc","isInRange","updateTemplateLocation","crosshairs","inFlight","wait","_hasMaxRange","_hasMinRange","rays","_tokenSquare","spot","distances","measureDistances","gridSpaces","range","_minRange","_maxRange","unit","targetConfig","drawIcon","drawOutline","interval","show","cancelled","mouse","app","renderer","plugins","interaction","getLocalPosition","stage","mouseCoords","boundsContains","bounds","point","found","AbilityTemplateConeBase","currentSpotIndex","updateTemplateRotation","totalSpots","length","radToNormalizedAngle","rad","PI","offset","_is15","normalizedAngle","spotIndex","rotateCrosshairs","initializeConeData","sourceConfig","source","_sourceSquare","gridOffset","qtyOffset","slice","DurationTracker","endOfTurnCallback","callback","endOfTurnExpirations","expireAll","e","removeEndOfTurnTemplates","templateIds","templates","deleteEmbeddedDocuments","init","Hooks","on","_combat","plugin","queueUpdate","combat","changed","combats","combatants","_worldTime","delta","deleteTemplatesForToken","_getTemplateIdsForToken","moveTemplatesToToken","updates","_objectSpread","object","updateEmbeddedDocuments","once","injectTemplateSelector","libWrapper","_userId","hasOwnProperty","gm","getFirstActiveGM","isFirstGM"],"mappings":"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"}